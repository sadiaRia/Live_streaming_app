
const socket = io('/');
const videoGrid = document.getElementById('video-grid');
const myVideo = document.createElement('video');
myVideo.muted = true;

//new peer connection
//here goes id which is undefines because this id will automatically generated by peer
const peer = new Peer(undefined, {
  path: '/peerjs',
  host: '/', //whaterver host 
  port: '3030' //as node js server on 3030
});


let myVideoStream;

//access permission for own video
navigator.mediaDevices.getUserMedia({
  video: true,
  audio: true
}).then(stream => {
  myVideoStream = stream;
  addVideoStream(myVideo, stream);

  //amswer the call form x & add the stream of x
  peer.on('call', call => {
    call.answer(stream)
    const video = document.createElement('video')
    call.on('stream', userVideoStream => {
      addVideoStream(video, userVideoStream)
    })
  })

  socket.on('user-connected', (userId) => {//now listen that userd after emit
    connectToNewUser(userId, stream);
  })
})

//here user video we call it stream

peer.on('open', id => {
  // console.log(id);
  socket.emit('join-room', ROOM_ID, id);//now we know which specic person join the room by that id using peer js
})

// socket.emit('join-room', ROOM_ID);


const connectToNewUser = (userId, stream) => {
  // console.log("new user", userId);
  const call = peer.call(userId, stream) //when someone connected I call her & send my stream
  const video = document.createElement('video')
  call.on('stream', userVideoStream => { // when I got some one stream then I add it 
    addVideoStream(video, userVideoStream)
  })
}

//append  video
const addVideoStream = (video, stream) => {
  video.srcObject = stream;
  video.addEventListener('loadedmetadata', () => {
    video.play();
  })
  videoGrid.append(video);
}